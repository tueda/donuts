plugins {
  id 'jacoco'
  id 'java-library'
  id 'maven-publish'
  id 'com.diffplug.spotless' version '6.13.0'
  id 'com.github.ben-manes.versions' version '0.50.0'
  id 'com.github.johnrengelman.shadow' version '8.1.1'
  id 'net.researchgate.release' version '3.0.2'
  id 'ru.vyarus.quality' version '4.9.0'
}

group = 'com.github.tueda'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

def versions = [
  checkstyle: '10.12.6',
  junit: '5.10.1',
  lombok: '1.18.30',
  pmd: '6.55.0',
  rings: '2.5.8',
  spotbugs: '4.8.3',
  truth: '1.2.0',
]

repositories {
  mavenCentral()
}

dependencies {
  api "cc.redberry:rings:${versions.rings}"
  compileOnly "com.github.spotbugs:spotbugs-annotations:${versions.spotbugs}"
  compileOnly "org.projectlombok:lombok:${versions.lombok}"
  annotationProcessor "org.projectlombok:lombok:${versions.lombok}"
  testImplementation "com.google.truth:truth:${versions.truth}"
  testImplementation "org.junit.jupiter:junit-jupiter-api:${versions.junit}"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${versions.junit}"
  // for dependencyUpdates
  testRuntimeOnly "net.sourceforge.pmd:pmd:${versions.pmd}"
}

javadoc {
  options {
    if (JavaVersion.current().isJava10Compatible()) {
      // javadoc in JDK 10 requires element-list.
      links("https://docs.oracle.com/en/java/javase/11/docs/api/")
    } else {
      links("https://docs.oracle.com/javase/8/docs/api/")
    }
    links("https://www.javadoc.io/doc/cc.redberry/rings/${versions.rings}/")
    addStringOption("tag", "apiNote:a:API Note:")
    // Fail if any warnings are encountered.
    if (JavaVersion.current().isJava8Compatible()) {
      addBooleanOption('Xdoclint', true)
      if (JavaVersion.current().isJava10Compatible()) {
        // Ignore "Error fetching URL" warnings in JDK < 10.
        addBooleanOption('Xwerror', true)
      }
      if (JavaVersion.current().isJava10()) {
        // Need to specify HTML4 or HTML5.
        addBooleanOption('html4', true)
      }
    }
  }
}

test {
  useJUnitPlatform()
  exclude '**/ImmutabilityTest.class'
}

task testWithoutCoverage(type: Test) {
  useJUnitPlatform()
  include '**/ImmutabilityTest.class'
}

check.dependsOn testWithoutCoverage

spotless {
  java {
    googleJavaFormat('1.7')
  }
  groovyGradle {
    greclipse().configFile('config/greclipse.properties')
  }
}

configurations {
  checkstyleConfig
}

// See: https://github.com/google/guava/releases/tag/v32.1.0
configurations.all {
  resolutionStrategy.capabilitiesResolution.withCapability("com.google.collections:google-collections") {
    select("com.google.guava:guava:0")
  }
}

dependencies {
  checkstyleConfig("com.puppycrawl.tools:checkstyle:${versions.checkstyle}") {
    transitive = false
  }
}

quality {
  checkstyleVersion = versions.checkstyle
  pmdVersion = versions.pmd
  spotbugsVersion = versions.spotbugs

  spotbugsEffort = 'max'
  spotbugsLevel = 'low'
}

afterEvaluate {
  checkstyle {
    config = resources.text.fromArchiveEntry(configurations.checkstyleConfig, 'google_checks.xml')
  }
  pmd {
    incrementalAnalysis = true
    ruleSetFiles = files('config/pmd.xml')
  }
}

shadowJar {
  minimize()
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allJava
  archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
  from javadoc
  archiveClassifier = 'javadoc'
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      artifact sourcesJar
      artifact javadocJar
      pom {
        name = 'Donuts'
        description = 'A wrapper library for Rings'
        url = 'https://github.com/tueda/donuts'
        inceptionYear = '2021'
        licenses {
          license {
            name = 'MIT License'
            url = 'http://www.opensource.org/licenses/mit-license.php'
            distribution = 'repo'
          }
        }
        developers {
          developer {
            id = 'tueda'
            name = 'Takahiro Ueda'
            email = 't.ueda.od@juntendo.ac.jp'
          }
        }
        scm {
          connection = 'scm:git:https://github.com/tueda/donuts.git'
          developerConnection = 'scm:git:https://github.com/tueda/donuts.git'
          url = 'https://github.com/tueda/donuts'
        }
      }
    }
  }
}

// See researchgate/gradle-release#107
project.tasks.release.dependsOn check

release {
  tagTemplate = 'v${version}'
}
